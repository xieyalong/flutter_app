def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '10'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.1'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
def keystorePropertiesFile = rootProject.file("key.properties")

def keystoreProperties = new Properties()

keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.xyl.flutter_app"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 30
        versionName "10.0.8"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
//        ndk {
//            //选择要添加的对应cpu类型的.so库。
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
//        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']

            keyPassword keystoreProperties['keyPassword']

            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation "com.android.support:appcompat-v7:28+"

//    implementation 'com.android.support:multidex:1.0.3'
//    implementation 'androidx.vectordrawable:vectordrawable:1.0.0+'
//    implementation 'androidx.appcompat:appcompat:1.0.0+'
//    implementation 'androidx.core:core:1.0.0+'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0+'
//    implementation 'androidx.media:media:1.0.0+'
//    implementation 'com.amap.api:location:4.4.0'

}
//统一版本
subprojects {
    configurations.all {
        //(1.0.0) and runtime (1.0.1)
        resolutionStrategy.force "androidx.vectordrawable:vectordrawable:1.0.0+"
        // (1.0.0) and runtime (1.0.2)
        resolutionStrategy.force "androidx.appcompat:appcompat:1.0.0+"
        //(1.0.0) and runtime (1.0.2)
        resolutionStrategy.force "androidx.core:core:1.0.0+"
        //(1.0.0-rc01) and runtime (1.0.0)
        resolutionStrategy.force "androidx.legacy:legacy-support-v4:1.0.0+"
        // (1.0.0-rc01) and runtime (1.0.0)
        resolutionStrategy.force "androidx.media:media:1.0.0+"

    }
}
